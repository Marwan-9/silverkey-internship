@page "/"
@model IndexModel
@using Microsoft.AspNetCore.Cors.Infrastructure
@{
    ViewData["Title"] = "Home page";
    var policyBuilder = new CorsPolicyBuilder()
        .AllowAnyOrigin()
        .AllowAnyMethod()
        .AllowAnyHeader()
        .WithExposedHeaders("Content-Disposition");

    var corsPolicy = policyBuilder.Build();
}

<style>
    .navbar {
        display: flex;
        justify-content: center;
        border-bottom: 1px solid black;
        font-size: 45px;
        font-weight: 700;
    }

    .pagination {
        display: flex;
        justify-content: center;
        margin-top: 20px;
    }

    .pagination a {
        display: inline-block;
        padding: 8px 12px;
        margin: 0 4px;
        color: #333;
        border: 1px solid #ccc;
        border-radius: 4px;
        text-decoration: none;
        transition: background-color 0.3s;
    }

    .pagination a:hover {
        background-color: #eee;
    }

    .pagination .active {
        background-color: #007bff;
        color: #fff;
        border-color: #007bff;
        cursor: default;
    }

    .container {
        display: flex;
        flex-direction: column;
        width: 65%;
        margin: 0 auto;
        color: black;
    }

    .item {
        margin: 20px 0px;
        padding: 10px;
        background-color: #F5F5F5;
        border-radius: 15px;
    }

    .title {
        font-size: 32px;
        font-weight: 700;
        color: black;
    }

    .button {
        width: 130px;
        height: fit-content;
        font-size: 18px;
        font-weight: 700;
        border-radius: 12px;
        background-color: #04aa6d;
    }

    .star {
        background-color: yellow;
        float: right;
        border-width: 0px;
        margin-right: 2%;
        width: 10%;
        border-radius: 10px;
        font-weight: 700;
    }

    @@media only screen and (max-width: 600px) {
        .container {
            width: 95%;
        }

        .title {
            font-size: 30px;
        }

        .pagination {
            flex-wrap: wrap;
        }

            .pagination a {
                margin: 4px;
            }
    }
</style>

@{
    int pageSize = (int)ViewData["PageSize"];
    int totalPages = (int)ViewData["TotalPages"];
    List<FeedItem> rssList = (List<FeedItem>)ViewData["RSSList"];

}
<script type="text/javascript">
    function toggleStar(index, button) {
        var form = $("#star-form-" + index);
        // Toggle the button label
        if (button.innerHTML == "Star") {
            button.innerHTML = "Unstar";
            button.style.backgroundColor = "grey";
        } 
        else if (button.innerHTML == "Unstar") {
            button.innerHTML = "Star";
            button.style.backgroundColor = "yellow";

        }

        // Submit the form via Ajax to handle the server-side update (using your existing submitForm function)
        submitForm(index, button);
    }
    function submitForm(index, button) {
        var form = $("#star-form-" + index) // Find the form with the specific index
        var data = form.serialize();
        $.ajax({
            type: 'POST',
            url: '/?handler=StarItem',
            contentType: 'application/x-www-form-urlencoded; charset=UTF-8',
            data: data,           
            success: function (result) {
                console.log('Successfully received Data');
            },
            error: function () {
                console.log('Failed to receive the Data');
            }
        });
    }
</script>


<div class="navbar"> OPML Reader</div>
<form method="get" asp-page="/Favorites">
    <button type="submit" class="star">Favorites</button>
    <br />
</form>

@{
    int index = 0;
}

@foreach (var Item in rssList)
{
    <div class="item">
        <form id="star-form-@index">
        @Html.AntiForgeryToken()
        <div class="title"> @Item.Title </div>
        <a class="link" asp-page="/Feed" asp-route-message="@Item.Link" target="_blank">
            <button class="button"> Click to Visit </button>
        </a>


            <input type="text" name="FeedLink" value="@Item.Link" hidden>
            <input type="text" name="FeedTitle" value="@Item.Title" hidden>
            @{
                if (Request.Cookies["StarredTitles"] != null && Request.Cookies["StarredTitles"].Contains(Item.Title))
                {
                    <button class="star" type="button" onclick="toggleStar(@index, this)" style="background-color:grey">Unstar</button>
                }
                else
                {
                    <button class="star" type="button" onclick="toggleStar(@index, this)">Star</button>
                }
            }
        </form>
    </div>

    index++; // Increment the index after each loop iteration
}

<div>
    Page @ViewData["PageNumber"] of @ViewData["TotalPages"]
</div>

<div class="pagination">
    @for (int i = 1; i <= (int)ViewData["TotalPages"]; i++)
    {
        <a href="?pageNumber=@i" @(i == (int)ViewData["PageNumber"] ? "class=active" : "")>@i</a>
    }
</div>
